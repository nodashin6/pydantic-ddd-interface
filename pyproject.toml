[tool.poetry]
name = "pydantic_ddd_interface"
version = "0.2.0"
description = "A Python library providing interface definitions for Domain-Driven Design (DDD) patterns using Pydantic for type safety and validation."
authors = ["nodashin <nodashin.jpn@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/nodashin6/pydantic-ddd-interface"
packages = [{include = "pydddi"}]
keywords = ["ddd", "domain-driven-design", "pydantic", "architecture", "interface"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = "^3.12"
pydantic = "^2.11.5"

[tool.poetry.dev-dependencies]
pytest = "^8.4.0"
pytest-cov = "^6.0.0"
black = "^25.1.0"
mypy = "^1.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
